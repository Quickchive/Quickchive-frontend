{"version":3,"sources":["webpack:///./src/components/category/FavoriteCategoryComponent.vue","webpack:///src/components/category/FavoriteCategoryComponent.vue","webpack:///./src/components/category/FavoriteCategoryComponent.vue?1459","webpack:///./src/components/category/FavoriteCategoryComponent.vue?bc3a","webpack:///./src/utils/sort.js"],"names":["render","_vm","this","_c","_self","staticClass","_v","directives","name","rawName","value","categoryFilter","expression","on","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","multiple","sortData","attrs","contentsData","length","collectionData","_e","_l","newArr","data","index","key","coverImg","staticRenderFns","components","ContentsComponent","CollectionComponent","isCollectionActive","isCategoryModalActive","categoryId","console","methods","component","sortLatestArr","log","sortedArr","sort","a","b","Date","createdAt","sortFavoritesArr","favoritesArr","favorite","NonFavoritesArr","sortedFavorites","updatedAt","sortedNonFavorites","sortDeadlineArr","deadlineContentArr","deadline","nonDeadlineContentArr","nonDeadLineAllArr","sortedDeadline","sortedNonDeadline"],"mappings":"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","file":"js/chunk-056a08ba.4a03c9b0.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"category-view\"},[_c('h1',{staticClass:\"page-header\"},[_vm._v(\"즐겨찾기\")]),_c('div',[_c('div',{staticClass:\"category__select-wrapper\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.categoryFilter),expression:\"categoryFilter\"}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.categoryFilter=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){return _vm.sortData(_vm.categoryFilter)}]}},[_c('option',{attrs:{\"value\":\"latest\"}},[_vm._v(\"최신순\")]),_c('option',{attrs:{\"value\":\"expiry\"}},[_vm._v(\"읽을기한순\")])])]),(_vm.contentsData.length == 0 && _vm.collectionData.length == 0)?_c('div',{staticClass:\"alert\"},[_c('h2',[_vm._v(\"(임시) 아직 콘텐츠&콜렉션이 없습니다😯\")])]):_vm._e(),_vm._l((_vm.newArr),function(data,index){return _c('div',{key:index},[(_vm.newArr[index].coverImg)?_c('contents-component',{attrs:{\"contentsData\":data}}):_vm._e(),(!_vm.newArr[index].coverImg)?_c('collection-component',{attrs:{\"collectionData\":data}}):_vm._e()],1)})],2)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"category-view\">\n    <h1 class=\"page-header\">즐겨찾기</h1>\n    <div>\n      <div class=\"category__select-wrapper\">\n        <select v-model=\"categoryFilter\" @change=\"sortData(categoryFilter)\">\n          <option value=\"latest\">최신순</option>\n          <option value=\"expiry\">읽을기한순</option>\n        </select>\n      </div>\n      <div\n        class=\"alert\"\n        v-if=\"contentsData.length == 0 && collectionData.length == 0\"\n      >\n        <h2>(임시) 아직 콘텐츠&콜렉션이 없습니다😯</h2>\n      </div>\n      <!-- 콘텐츠 컴포넌트 -->\n      <div v-for=\"(data, index) in newArr\" :key=\"index\">\n        <contents-component\n          :contentsData=\"data\"\n          v-if=\"newArr[index].coverImg\"\n        ></contents-component>\n        <!-- 콜렉션 컴포넌트 -->\n        <collection-component\n          v-if=\"!newArr[index].coverImg\"\n          :collectionData=\"data\"\n        ></collection-component>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ContentsComponent from \"@/components/content/ContentsComponent.vue\";\nimport CollectionComponent from \"@/components/collection/CollectionComponent.vue\";\nimport { fetchMyFavorites } from \"@/api/user\";\nimport { sortLatestArr, sortDeadlineArr } from \"@/utils/sort\";\n\nexport default {\n  components: {\n    ContentsComponent,\n    CollectionComponent,\n  },\n  data() {\n    return {\n      isCollectionActive: false,\n      isCategoryModalActive: false,\n      categoryFilter: \"latest\",\n      categoryId: \"\",\n      // 즐겨찾기 더미 데이터\n      contentsData: [],\n      collectionData: [],\n      newArr: [],\n    };\n  },\n  async created() {\n    await this.fetchFavoritesList();\n    // 콘텐츠 컴포넌트 최신순 정렬\n    this.newArr = sortLatestArr(this.contentsData, this.collectionData);\n    console.log(\"newArr\", this.newArr);\n  },\n  methods: {\n    // 나의 즐겨찾기 조회\n    async fetchFavoritesList() {\n      try {\n        const response = await fetchMyFavorites();\n        // 콘텐츠 컴포넌트에 데이터 전달\n        this.contentsData = response.data.favorite_contents;\n        this.collectionData = response.data.favorite_collections;\n        console.log(\"즐겨찾기 데이터\", response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // 정렬\n    sortData(filter) {\n      console.log(\"정렬 메소드\");\n      if (filter == \"latest\") {\n        console.log(\"최신 순으로 정렬한다.\");\n        this.newArr = sortLatestArr(this.contentsData, this.collectionData);\n      } else if (filter == \"expiry\") {\n        console.log(\"만기 순으로 정렬한다.\");\n        this.newArr = sortDeadlineArr(this.contentsData, this.collectionData);\n        console.log(this.newArr);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FavoriteCategoryComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FavoriteCategoryComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FavoriteCategoryComponent.vue?vue&type=template&id=3a864fc1&\"\nimport script from \"./FavoriteCategoryComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./FavoriteCategoryComponent.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**** 콘텐츠 + 콜렉션 배열 합쳐서 */\n\n// 1. 최신순 정렬(createdAt)\n// - 콘텐츠 및 콜렉션을 우리 웹사이트에 가장 최근에 저장한 순서대로 노출\nfunction sortLatestArr(contentsData, collectionData) {\n  console.log(\"최신순 정렬\");\n\n  // 1) 콘텐츠 배열과 콜렉션 배열을 합친다.(spread operator: 전개연산자)\n  const newArr = [...contentsData, ...collectionData];\n  // 2) 문자열 - 날짜를 날짜 - 날짜로 변경\n  const sortedArr = newArr.sort(\n    (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n  );\n  return sortedArr;\n}\n\n// 2. 즐겨찾기 순\n// - 즐겨찾기를 지정한 날짜순\n// *즐겨찾기가 지정된 콘텐츠 및 콜렉션은 수정된 날짜 순서대로 노출\n// (예: 22.8.23 23:34 저장 + 22.9.10에 즐겨찾기 지정 > 22.9.6 14:00 저장 + 22.9.6 14:03에 즐겨찾기 지정)\nfunction sortFavoritesArr(contentsData, collectionData) {\n  console.log(\"즐겨찾기순 정렬\");\n  const newArr = [...contentsData, ...collectionData];\n\n  // 즐겨찾기 있는 것만 분류\n  const favoritesArr = newArr.filter((data) => data.favorite == true);\n  // 즐겨찾기 없는 것만 분류\n  const NonFavoritesArr = newArr.filter((data) => data.favorite == false);\n\n  // 즐겨찾기 된 것들을 최신순으로 정렬\n  const sortedFavorites = favoritesArr.sort(\n    (a, b) => new Date(b.updatedAt) - new Date(a.updatedAt)\n  );\n  // 즐겨찾기 되지 않은 것들을 최신순으로 정렬\n  const sortedNonFavorites = NonFavoritesArr.sort(\n    (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n  );\n\n  // 위 두 배열을 합침\n  const sortedArr = [...sortedFavorites, ...sortedNonFavorites];\n\n  return sortedArr;\n}\n\n// 3. 읽을 기한 순(\nfunction sortDeadlineArr(contentsData, collectionData) {\n  // const newArr = [...contentsData, ...collectionData];\n  console.log(\"읽을기한순 정렬\");\n\n  // 기한이 있는 것만 분류\n  const deadlineContentArr = contentsData.filter((data) => data.deadline);\n  // 기한이 없는 것만 분류\n  const nonDeadlineContentArr = contentsData.filter((data) => !data.deadline);\n\n  const nonDeadLineAllArr = [...nonDeadlineContentArr, ...collectionData];\n\n  // 기한이 있는 것들을 읽을 기한이 임박한 순으로 정렬\n  const sortedDeadline = deadlineContentArr.sort(\n    (a, b) => new Date(a.deadline) - new Date(b.deadline)\n  );\n  // 기한이 없는 것들을 최신순으로 정렬\n  const sortedNonDeadline = nonDeadLineAllArr.sort(\n    (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n  );\n\n  // 위 두 배열을 합침\n  const sortedArr = [...sortedDeadline, ...sortedNonDeadline];\n\n  return sortedArr;\n}\n\n/**** 콘텐츠 / 콜렉션 별개로 */\n\n// 1. 최신순 정렬(createdAt) - 배열 한 개 대상\nfunction sortLatest(data) {\n  const sortedArr = data.sort(\n    (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n  );\n  return sortedArr;\n}\n\n// 2. 즐겨찾기 순 - 즐겨찾기를 지정한 날짜 순\nfunction sortFavorites(data) {\n  const arr = data.sort(\n    (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n  );\n  const sortedArr = arr.filter((content) => content.favorites == true);\n  return sortedArr;\n}\n\n// 3. 읽을 기한 순(읽을 기한 짧은 순?)\nfunction sortDeadline(data) {\n  const arr = data.filter((content) => content.deadline);\n\n  const sortedArr = arr.sort(\n    (a, b) => new Date(b.deadline) - new Date(a.deadline)\n  );\n  return sortedArr;\n}\n\nexport {\n  sortLatestArr,\n  sortFavoritesArr,\n  sortDeadlineArr,\n  sortLatest,\n  sortFavorites,\n  sortDeadline,\n};\n"],"sourceRoot":""}